import { type NextPage } from "next";
import {useEffect, useState} from "react"
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { trpc } from "../utils/trpc";
import NavBar from "../components/NavBar";
import BudgetHeader from "../components/BudgetHeader";
import Login from "../components/Login";
import SpendingActivity from "../components/SpendingActivity";
import type { Budget } from "@prisma/client";
import SummaryTable from "../components/SummaryTable";
import { useRouter } from "next/router";
import Calculator from "../components/Calculator";
import CalculatorModal from "../components/CalculatorModal";
import { useLocalStorage, useSetGetLocalStorage } from "../hooks/useLocalStorage";

const Home: NextPage = () => {

  const {data: session} = useSession()
  const {data: userBudget} = trpc.db.getBudget.useQuery()
  const [showCalculator, setShowCalculator] = useState<boolean>(false)
  // const [queryString, setQueryString] = useState<string>('')
  const {query} = useRouter()
  // const {budget} = useSetGetLocalStorage()
  // const [value, setValue] = useLocalStorage('budget', {})

  console.log(session);
  console.log(query);
  
  // useEffect(() => {
  //   query.demo = queryString
  // }, [queryString])

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="min-h-screen flex flex-col pb-5 bg-green-100 bg-img relative">
        <NavBar showCalculator={showCalculator} setShowCalculator={setShowCalculator} />
        {(query.demo !== 'demo' && !session) ? (<Login />) : (
          <>
            <div className="flex max-sm:flex-col justify-center  w-full gap-10">
              <div className="flex flex-col w-[40%] max-sm:w-[100%]">
                <BudgetHeader userBudget={userBudget as Budget} />
                {<SpendingActivity userBudget={userBudget as Budget} />}
              </div>
              {<SummaryTable userBudget={userBudget as Budget} />}
            </div>

          </>
        )}
        {(!session || query.demo ==='demo') &&<div className="w-full flex justify-center my-10">
          <Link className="text-slate-200 flex justify-center bg-slate-600 active:bg-slate-600 hover:bg-slate-500 w-1/2 rounded-full p-2" href={{
            pathname: '/',
            query: {
              demo: query.demo === 'demo' ? '' : 'demo'
            }
          }}>
            <button>{query.demo ? 'End' : ''} Demo</button>
          
          </Link>

        </div>}

        {showCalculator && <CalculatorModal showCalculator={showCalculator} setShowCalculator={setShowCalculator} />}
        
      </main>
    </>
  );
};

export default Home;


